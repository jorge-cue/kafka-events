#
#

# Settings in this section are applied to all profiles

spring:
  kafka:
    client-id: proof-of-concept-001
    admin:
      fail-fast: true
    consumer:
      enable-auto-commit: true
      auto-offset-reset: earliest
      group-id: Proof_Of_Concept~Producer~Listener~001
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        # Use specific record or we get Avro's GenericRecord$Data
        specific.avro.reader: true
        schema.registry.url: http://localhost:8081
    producer:
      acks: all
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: http://localhost:8081
    bootstrap-servers: localhost:9092
  application:
    admin:
      enabled: true
    name: kafka-events

management:
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

application:
  machine-event-topic: evt_machine_event

---
# Settings in this section are applied for test profile additionally to settings in global section above or override
# settings above

spring:
  profiles:
    active: test
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      properties:
        schema.registry.url: mock://kafka_events
    producer:
      properties:
        schema.registry.url: mock://kafka_events
---
# Settings in this section are applied for dev profile additionally to settings in global section above or override
# settings above

spring:
  profiles:
    active: dev
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      properties:
        schema.registry.url: mock://kafka_events
    producer:
      properties:
        schema.registry.url: mock://kafka_events
